<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xr.mapper.PartyPositionRiskMapper">
  <resultMap id="BaseResultMap" type="com.xr.model.PartyPositionRisk">
    <!--@mbg.generated-->
    <!--@Table Party_Position_Risk-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="risk_id" jdbcType="INTEGER" property="riskId" />
    <result column="risk_yaers" jdbcType="TIMESTAMP" property="riskYaers" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="joc_id" jdbcType="INTEGER" property="jocId" />
    <result column="risk_project" jdbcType="CHAR" property="riskProject" />
    <result column="risk_describe" jdbcType="VARCHAR" property="riskDescribe" />
    <result column="risk_may_value" jdbcType="VARCHAR" property="riskMayValue" />
    <result column="risk_result_value" jdbcType="INTEGER" property="riskResultValue" />
    <result column="risk_integrity_value" jdbcType="INTEGER" property="riskIntegrityValue" />
    <result column="risk_grade" jdbcType="INTEGER" property="riskGrade" />
    <result column="prevention" jdbcType="TINYINT" property="prevention" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, risk_id, risk_yaers, dept_id, joc_id, risk_project, risk_describe, risk_may_value,
    risk_result_value, risk_integrity_value, risk_grade, prevention, create_date, create_id,
    create_name, `status`
  </sql>
  <select id="selectByExample" parameterType="com.xr.model.PartyPositionRiskExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Party_Position_Risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from Party_Position_Risk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from Party_Position_Risk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xr.model.PartyPositionRiskExample">
    <!--@mbg.generated-->
    delete from Party_Position_Risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xr.model.PartyPositionRisk">
    <!--@mbg.generated-->
    insert into Party_Position_Risk (id, risk_id, risk_yaers,
      dept_id, joc_id, risk_project,
      risk_describe, risk_may_value, risk_result_value,
      risk_integrity_value, risk_grade, prevention,
      create_date, create_id, create_name,
      `status`)
    values (#{id,jdbcType=INTEGER}, #{riskId,jdbcType=INTEGER}, #{riskYaers,jdbcType=TIMESTAMP},
      #{deptId,jdbcType=INTEGER}, #{jocId,jdbcType=INTEGER}, #{riskProject,jdbcType=CHAR},
      #{riskDescribe,jdbcType=VARCHAR}, #{riskMayValue,jdbcType=VARCHAR}, #{riskResultValue,jdbcType=INTEGER},
      #{riskIntegrityValue,jdbcType=INTEGER}, #{riskGrade,jdbcType=INTEGER}, #{prevention,jdbcType=TINYINT},
      #{createDate,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{createName,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xr.model.PartyPositionRisk">
    <!--@mbg.generated-->
    insert into Party_Position_Risk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="riskId != null">
        risk_id,
      </if>
      <if test="riskYaers != null">
        risk_yaers,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="jocId != null">
        joc_id,
      </if>
      <if test="riskProject != null">
        risk_project,
      </if>
      <if test="riskDescribe != null">
        risk_describe,
      </if>
      <if test="riskMayValue != null">
        risk_may_value,
      </if>
      <if test="riskResultValue != null">
        risk_result_value,
      </if>
      <if test="riskIntegrityValue != null">
        risk_integrity_value,
      </if>
      <if test="riskGrade != null">
        risk_grade,
      </if>
      <if test="prevention != null">
        prevention,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="riskId != null">
        #{riskId,jdbcType=INTEGER},
      </if>
      <if test="riskYaers != null">
        #{riskYaers,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jocId != null">
        #{jocId,jdbcType=INTEGER},
      </if>
      <if test="riskProject != null">
        #{riskProject,jdbcType=CHAR},
      </if>
      <if test="riskDescribe != null">
        #{riskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="riskMayValue != null">
        #{riskMayValue,jdbcType=VARCHAR},
      </if>
      <if test="riskResultValue != null">
        #{riskResultValue,jdbcType=INTEGER},
      </if>
      <if test="riskIntegrityValue != null">
        #{riskIntegrityValue,jdbcType=INTEGER},
      </if>
      <if test="riskGrade != null">
        #{riskGrade,jdbcType=INTEGER},
      </if>
      <if test="prevention != null">
        #{prevention,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xr.model.PartyPositionRiskExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from Party_Position_Risk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update Party_Position_Risk
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.riskId != null">
        risk_id = #{record.riskId,jdbcType=INTEGER},
      </if>
      <if test="record.riskYaers != null">
        risk_yaers = #{record.riskYaers,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.jocId != null">
        joc_id = #{record.jocId,jdbcType=INTEGER},
      </if>
      <if test="record.riskProject != null">
        risk_project = #{record.riskProject,jdbcType=CHAR},
      </if>
      <if test="record.riskDescribe != null">
        risk_describe = #{record.riskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.riskMayValue != null">
        risk_may_value = #{record.riskMayValue,jdbcType=VARCHAR},
      </if>
      <if test="record.riskResultValue != null">
        risk_result_value = #{record.riskResultValue,jdbcType=INTEGER},
      </if>
      <if test="record.riskIntegrityValue != null">
        risk_integrity_value = #{record.riskIntegrityValue,jdbcType=INTEGER},
      </if>
      <if test="record.riskGrade != null">
        risk_grade = #{record.riskGrade,jdbcType=INTEGER},
      </if>
      <if test="record.prevention != null">
        prevention = #{record.prevention,jdbcType=TINYINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update Party_Position_Risk
    set id = #{record.id,jdbcType=INTEGER},
      risk_id = #{record.riskId,jdbcType=INTEGER},
      risk_yaers = #{record.riskYaers,jdbcType=TIMESTAMP},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      joc_id = #{record.jocId,jdbcType=INTEGER},
      risk_project = #{record.riskProject,jdbcType=CHAR},
      risk_describe = #{record.riskDescribe,jdbcType=VARCHAR},
      risk_may_value = #{record.riskMayValue,jdbcType=VARCHAR},
      risk_result_value = #{record.riskResultValue,jdbcType=INTEGER},
      risk_integrity_value = #{record.riskIntegrityValue,jdbcType=INTEGER},
      risk_grade = #{record.riskGrade,jdbcType=INTEGER},
      prevention = #{record.prevention,jdbcType=TINYINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_name = #{record.createName,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.model.PartyPositionRisk">
    <!--@mbg.generated-->
    update Party_Position_Risk
    <set>
      <if test="riskId != null">
        risk_id = #{riskId,jdbcType=INTEGER},
      </if>
      <if test="riskYaers != null">
        risk_yaers = #{riskYaers,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jocId != null">
        joc_id = #{jocId,jdbcType=INTEGER},
      </if>
      <if test="riskProject != null">
        risk_project = #{riskProject,jdbcType=CHAR},
      </if>
      <if test="riskDescribe != null">
        risk_describe = #{riskDescribe,jdbcType=VARCHAR},
      </if>
      <if test="riskMayValue != null">
        risk_may_value = #{riskMayValue,jdbcType=VARCHAR},
      </if>
      <if test="riskResultValue != null">
        risk_result_value = #{riskResultValue,jdbcType=INTEGER},
      </if>
      <if test="riskIntegrityValue != null">
        risk_integrity_value = #{riskIntegrityValue,jdbcType=INTEGER},
      </if>
      <if test="riskGrade != null">
        risk_grade = #{riskGrade,jdbcType=INTEGER},
      </if>
      <if test="prevention != null">
        prevention = #{prevention,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.model.PartyPositionRisk">
    <!--@mbg.generated-->
    update Party_Position_Risk
    set risk_id = #{riskId,jdbcType=INTEGER},
      risk_yaers = #{riskYaers,jdbcType=TIMESTAMP},
      dept_id = #{deptId,jdbcType=INTEGER},
      joc_id = #{jocId,jdbcType=INTEGER},
      risk_project = #{riskProject,jdbcType=CHAR},
      risk_describe = #{riskDescribe,jdbcType=VARCHAR},
      risk_may_value = #{riskMayValue,jdbcType=VARCHAR},
      risk_result_value = #{riskResultValue,jdbcType=INTEGER},
      risk_integrity_value = #{riskIntegrityValue,jdbcType=INTEGER},
      risk_grade = #{riskGrade,jdbcType=INTEGER},
      prevention = #{prevention,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
