<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xr.mapper.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.xr.model.SysLog">
    <!--@mbg.generated-->
    <!--@Table sys_log-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="Login_Id" jdbcType="INTEGER" property="loginId" />
    <result column="Login_userName" jdbcType="VARCHAR" property="loginUsername" />
    <result column="URL" jdbcType="LONGVARCHAR" property="url" />
    <result column="HTTP_METHOD" jdbcType="LONGVARCHAR" property="httpMethod" />
    <result column="IP" jdbcType="LONGVARCHAR" property="ip" />
    <result column="CLASS_METHOD" jdbcType="LONGVARCHAR" property="classMethod" />
    <result column="REQUEST ARGS" jdbcType="LONGVARCHAR" property="requestArgs" />
    <result column="Create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, Login_Id, Login_userName, URL, HTTP_METHOD, IP, CLASS_METHOD, `REQUEST ARGS`, 
    Create_date
  </sql>
  <select id="selectByExample" parameterType="com.xr.model.SysLogExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xr.model.SysLogExample">
    <!--@mbg.generated-->
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xr.model.SysLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_log (Login_Id, Login_userName, URL, 
      HTTP_METHOD, IP, CLASS_METHOD, 
      `REQUEST ARGS`, Create_date)
    values (#{loginId,jdbcType=INTEGER}, #{loginUsername,jdbcType=VARCHAR}, #{url,jdbcType=LONGVARCHAR}, 
      #{httpMethod,jdbcType=LONGVARCHAR}, #{ip,jdbcType=LONGVARCHAR}, #{classMethod,jdbcType=LONGVARCHAR}, 
      #{requestArgs,jdbcType=LONGVARCHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xr.model.SysLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        Login_Id,
      </if>
      <if test="loginUsername != null">
        Login_userName,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="httpMethod != null">
        HTTP_METHOD,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="classMethod != null">
        CLASS_METHOD,
      </if>
      <if test="requestArgs != null">
        `REQUEST ARGS`,
      </if>
      <if test="createDate != null">
        Create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="loginUsername != null">
        #{loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="httpMethod != null">
        #{httpMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=LONGVARCHAR},
      </if>
      <if test="classMethod != null">
        #{classMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestArgs != null">
        #{requestArgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xr.model.SysLogExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update sys_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null">
        Login_Id = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.loginUsername != null">
        Login_userName = #{record.loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.httpMethod != null">
        HTTP_METHOD = #{record.httpMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.classMethod != null">
        CLASS_METHOD = #{record.classMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.requestArgs != null">
        `REQUEST ARGS` = #{record.requestArgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.createDate != null">
        Create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update sys_log
    set id = #{record.id,jdbcType=INTEGER},
      Login_Id = #{record.loginId,jdbcType=INTEGER},
      Login_userName = #{record.loginUsername,jdbcType=VARCHAR},
      URL = #{record.url,jdbcType=LONGVARCHAR},
      HTTP_METHOD = #{record.httpMethod,jdbcType=LONGVARCHAR},
      IP = #{record.ip,jdbcType=LONGVARCHAR},
      CLASS_METHOD = #{record.classMethod,jdbcType=LONGVARCHAR},
      `REQUEST ARGS` = #{record.requestArgs,jdbcType=LONGVARCHAR},
      Create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.model.SysLog">
    <!--@mbg.generated-->
    update sys_log
    <set>
      <if test="loginId != null">
        Login_Id = #{loginId,jdbcType=INTEGER},
      </if>
      <if test="loginUsername != null">
        Login_userName = #{loginUsername,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        URL = #{url,jdbcType=LONGVARCHAR},
      </if>
      <if test="httpMethod != null">
        HTTP_METHOD = #{httpMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=LONGVARCHAR},
      </if>
      <if test="classMethod != null">
        CLASS_METHOD = #{classMethod,jdbcType=LONGVARCHAR},
      </if>
      <if test="requestArgs != null">
        `REQUEST ARGS` = #{requestArgs,jdbcType=LONGVARCHAR},
      </if>
      <if test="createDate != null">
        Create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.model.SysLog">
    <!--@mbg.generated-->
    update sys_log
    set Login_Id = #{loginId,jdbcType=INTEGER},
      Login_userName = #{loginUsername,jdbcType=VARCHAR},
      URL = #{url,jdbcType=LONGVARCHAR},
      HTTP_METHOD = #{httpMethod,jdbcType=LONGVARCHAR},
      IP = #{ip,jdbcType=LONGVARCHAR},
      CLASS_METHOD = #{classMethod,jdbcType=LONGVARCHAR},
      `REQUEST ARGS` = #{requestArgs,jdbcType=LONGVARCHAR},
      Create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>