<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xr.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.xr.model.SysUser">
    <!--@mbg.generated-->
    <!--@Table sys_user-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_sex" jdbcType="INTEGER" property="empSex" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="politics" jdbcType="VARCHAR" property="politics" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, emp_id, emp_name, emp_sex, education, politics, create_id, username, `password`,
    salt, mobile, `status`, dept_id, create_by, create_time, del_flag, introduction,
    avatar
  </sql>
  <select id="selectByExample" parameterType="com.xr.model.SysUserExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xr.model.SysUserExample">
    <!--@mbg.generated-->
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xr.model.SysUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_user (emp_id, emp_name, emp_sex,
      education, politics, create_id,
      username, `password`, salt,
      mobile, `status`, dept_id,
      create_by, create_time, del_flag,
      introduction, avatar)
    values (#{empId,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{empSex,jdbcType=INTEGER},
      #{education,jdbcType=VARCHAR}, #{politics,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
      #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{deptId,jdbcType=BIGINT},
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT},
      #{introduction,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xr.model.SysUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empSex != null">
        emp_sex,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="politics != null">
        politics,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        #{empSex,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="politics != null">
        #{politics,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xr.model.SysUserExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empSex != null">
        emp_sex = #{record.empSex,jdbcType=INTEGER},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.politics != null">
        politics = #{record.politics,jdbcType=VARCHAR},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      emp_sex = #{record.empSex,jdbcType=INTEGER},
      education = #{record.education,jdbcType=VARCHAR},
      politics = #{record.politics,jdbcType=VARCHAR},
      create_id = #{record.createId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      dept_id = #{record.deptId,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.model.SysUser">
    <!--@mbg.generated-->
    update sys_user
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        emp_sex = #{empSex,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="politics != null">
        politics = #{politics,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.model.SysUser">
    <!--@mbg.generated-->
    update sys_user
    set emp_id = #{empId,jdbcType=VARCHAR},
      emp_name = #{empName,jdbcType=VARCHAR},
      emp_sex = #{empSex,jdbcType=INTEGER},
      education = #{education,jdbcType=VARCHAR},
      politics = #{politics,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      dept_id = #{deptId,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      introduction = #{introduction,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

<resultMap id="userAndRoleAndMenuResultMap" type="com.xr.model.SysUser">
  <id column="uid" property="id" />
  <result column="username" property="username" />
  <result column="password" property="password" />
  <result column="salt" property="salt" />
  <result column="email" property="email" />
  <result column="mobile" property="mobile" />
  <result column="status" property="status" />
  <result column="dept_id" property="deptId" />
  <result column="udelFlag" property="delFlag" />
  <result column="introduction" property="introduction" />
  <result column="avatar" property="avatar" />
<!--  用户与角色的一对多关系-->
  <collection ofType="com.xr.model.SysRole" property="roles">
    <id column="rid" property="id" />
    <result column="rname" property="name" />
    <result column="remark" property="remark" />
<!--    角色与权限的一对多-->
    <collection ofType="com.xr.model.SysMenu" property="menus">
      <id column="mid" property="id" />
      <result column="mname" property="name" />
      <result column="parent_id" property="parentId" />
      <result column="url" property="url" />
      <result column="perms" property="perms" />
      <result column="type" property="type" />
      <result column="icon" property="icon" />
      <result column="order_num" property="orderNum" />
    </collection>
  </collection>
</resultMap>

<!-- 根据用户名查询角色集合 -->
  <select id="findUserRolesId" parameterType="Long" resultType="Long">
    SELECT r.id from sys_user u,sys_role r,sys_user_role ur
    where r.id = ur.role_id and u.username=#{username} and ur.user_id=u.id
  </select>
<!--  根据用户名查询角色和角色对应的权限-->
  <select id="findUserByNameAndRoleAndMenu" parameterType="string" resultMap="userAndRoleAndMenuResultMap">
   select u.id uid,introduction,avatar,username,password,salt,mobile,status,dept_id,u.del_flag udelFlag
    ,r.id rid,r.name rname,r.remark
    ,m.id mid,m.name mname,m.parent_id,m.url,m.perms,m.type,m.icon,m.order_num
    from sys_user u
    INNER JOIN sys_user_role ur
    ON u.id = ur.user_id
    INNER JOIN sys_role r
    ON ur.role_id = r.id
    INNER JOIN sys_role_menu rm
    ON r.id = rm.role_id
    INNER JOIN sys_menu m
    ON m.id = rm.menu_id
    where username=#{username} and u.del_flag=0 and r.del_flag=0 and m.del_flag=0
  </select>
<!-- 根据用户名查询角色集合 -->
  <select id="findUserRoles" parameterType="string" resultType="string">
    SELECT r.name from sys_user u,sys_role r,sys_user_role ur
    where r.id = ur.role_id and u.username=#{username} and ur.user_id=u.id
  </select>
<!--auto generated by MybatisCodeHelper on 2020-06-22-->
  <update id="updateStatusById">
    update sys_user
    set `status`=#{updatedStatus,jdbcType=TINYINT}
    where id=#{id,jdbcType=BIGINT}
  </update>

</mapper>
